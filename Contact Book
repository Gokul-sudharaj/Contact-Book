class Contact:
    def __init__(self, name, phone, email, address):
        self.name = name
        self.phone = phone
        self.email = email
        self.address = address

    def update(self, name=None, phone=None, email=None, address=None):
        if name:
            self.name = name
        if phone:
            self.phone = phone
        if email:
            self.email = email
        if address:
            self.address = address

    def __str__(self):
        return f"Name: {self.name}, Phone: {self.phone}, Email: {self.email}, Address: {self.address}"


class ContactManager:
    def __init__(self):
        self.contacts = []

    def add_contact(self, contact):
        self.contacts.append(contact)
        print(f"Contact '{contact.name}' added successfully.")

    def view_contacts(self):
        if not self.contacts:
            print("No contacts available.")
        else:
            print("\nContact List:")
            for contact in self.contacts:
                print(contact)

    def search_contact(self, search_term):
        results = [contact for contact in self.contacts if search_term.lower() in contact.name.lower() or search_term in contact.phone]
        if results:
            print("\nSearch Results:")
            for contact in results:
                print(contact)
        else:
            print(f"No contacts found for '{search_term}'.")

    def update_contact(self, search_term):
        contact = self._find_contact(search_term)
        if contact:
            name = input("Enter new name (or press Enter to keep current): ")
            phone = input("Enter new phone number (or press Enter to keep current): ")
            email = input("Enter new email (or press Enter to keep current): ")
            address = input("Enter new address (or press Enter to keep current): ")

            contact.update(name=name or None, phone=phone or None, email=email or None, address=address or None)
            print(f"Contact '{contact.name}' updated successfully.")
        else:
            print(f"No contact found for '{search_term}'.")

    def delete_contact(self, search_term):
        contact = self._find_contact(search_term)
        if contact:
            self.contacts.remove(contact)
            print(f"Contact '{contact.name}' deleted successfully.")
        else:
            print(f"No contact found for '{search_term}'.")

    def _find_contact(self, search_term):
        for contact in self.contacts:
            if search_term.lower() in contact.name.lower() or search_term in contact.phone:
                return contact
        return None


def main():
    manager = ContactManager()

    while True:
        print("\nContact Manager Menu:")
        print("1. Add Contact")
        print("2. View Contacts")
        print("3. Search Contact")
        print("4. Update Contact")
        print("5. Delete Contact")
        print("6. Exit")
        choice = input("Enter your choice (1-6): ")

        if choice == '1':
            name = input("Enter name: ")
            phone = input("Enter phone number: ")
            email = input("Enter email: ")
            address = input("Enter address: ")
            contact = Contact(name, phone, email, address)
            manager.add_contact(contact)
        elif choice == '2':
            manager.view_contacts()
        elif choice == '3':
            search_term = input("Enter name or phone number to search: ")
            manager.search_contact(search_term)
        elif choice == '4':
            search_term = input("Enter name or phone number to update: ")
            manager.update_contact(search_term)
        elif choice == '5':
            search_term = input("Enter name or phone number to delete: ")
            manager.delete_contact(search_term)
        elif choice == '6':
            print("Exiting the Contact Manager. Goodbye!")
            break
        else:
            print("Invalid choice. Please try again.")


if __name__ == "__main__":
    main()
